apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.openclassrooms.realestatemanager"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner 'com.openclassrooms.realestatemanager.MockTestRunner'
        multiDexEnabled true
        // clear state after each individual test
        // testInstrumentationRunnerArguments clearPackageData: 'true'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        viewBinding true
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

    testOptions {
//        execution 'ANDROIDX_TEST_ORCHESTRATOR'
        unitTests.includeAndroidResources = true
    }

    sourceSets {
        debug {
            java {
                srcDirs 'src/debug/java'
            }
            res {
                srcDirs 'src/debug/res'
            }
            assets {
                srcDirs 'src/debug/assets'
            }
            resources {
                srcDirs 'src/debug/resources'
            }
        }
        release {
            java {
                srcDirs 'src/release/java'
            }
        }

        String sharedTestDir = 'src/sharedTest/java'
        test {
            java.srcDir sharedTestDir
        }
        androidTest {
            java.srcDir sharedTestDir
        }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Multi dex dependencies
    def multi_dex_version = "1.0.3"
    implementation "com.android.support:multidex:$multi_dex_version"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation "com.google.android.material:material:1.3.0"
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    // Recyclerview
    def recyclerview_version = "1.1.0-beta03"
    implementation "androidx.recyclerview:recyclerview:$recyclerview_version"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    testImplementation 'androidx.test.ext:junit:1.1.2'

    def mockito_kotlin_version = "1.6.0"
    androidTestImplementation "com.nhaarman:mockito-kotlin:$mockito_kotlin_version"
    testImplementation "com.nhaarman:mockito-kotlin:$mockito_kotlin_version"

    def mockito_version = "1.10.19"
    testImplementation "org.mockito:mockito-all:$mockito_version"

    def mockito_android_version = "3.8.0"
    // https://mvnrepository.com/artifact/org.mockito/mockito-android
    androidTestImplementation "org.mockito:mockito-android:$mockito_android_version"

    // androidx.fragment testing
    def fragment_testing_version = "1.3.1"
    debugImplementation "androidx.fragment:fragment-testing:$fragment_testing_version"

    // Espresso
    def androidx_espresso_core = "3.3.0"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidx_espresso_core"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$androidx_espresso_core"

    def androidx_espresso_idling_resource = "3.3.0"
    androidTestImplementation "androidx.test.espresso:espresso-idling-resource:$androidx_espresso_idling_resource"
    implementation "androidx.test.espresso:espresso-idling-resource:$androidx_espresso_idling_resource"

    // androidx.test
    def androidx_test_runner = "1.3.0"
    androidTestImplementation "androidx.test:runner:$androidx_test_runner"
    testImplementation "androidx.test:runner:$androidx_test_runner"

    //def test_orchestrator_version = "1.4.0-alpha04"
    //androidTestUtil "androidx.test:orchestrator:$test_orchestrator_version"

    def androidx_test_rules = "1.3.0"
    androidTestImplementation "androidx.test:rules:$androidx_test_rules"
    testImplementation "androidx.test:rules:$androidx_test_rules"

    def androidx_test_core = "1.3.0"
    androidTestImplementation "androidx.test:core-ktx:$androidx_test_core"

    def arch_testing_version = "2.1.0"
    androidTestImplementation "androidx.arch.core:core-testing:$arch_testing_version"
    testImplementation "androidx.arch.core:core-testing:$arch_testing_version"

//    // Robolectric environment
//    def robolectric_version = "4.4"
//    testImplementation "org.robolectric:robolectric:$robolectric_version"

    def truth_version = "1.0.1"
    androidTestImplementation "com.google.truth:truth:$truth_version"
    testImplementation "com.google.truth:truth:$truth_version"

    // jetpack navigation components
    def nav_version = "2.3.4"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // androidx.fragment
    def fragment_version = "1.3.1"
    implementation "androidx.fragment:fragment-ktx:$fragment_version"

    // Dagger
    def dagger_version = "2.31.2"
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$dagger_version"

    // Firebase dependencies
    // Import the Firebase BoM
    // When using the BoM, don't specify versions in Firebase dependencies
    implementation platform('com.google.firebase:firebase-bom:26.2.0')

    // Add the dependency for the Firebase SDK for Google Analytics
    implementation 'com.google.firebase:firebase-analytics-ktx'

    // Declare the dependency for the Cloud Firestore library
    implementation 'com.google.firebase:firebase-firestore-ktx'

    // Declare the dependency for the Cloud Storage library
    implementation 'com.google.firebase:firebase-storage-ktx'

    // FirebaseUI Storage only
    implementation 'com.firebaseui:firebase-ui-storage:6.4.0'

    // Add the dependencies for any other desired Firebase products
    // https://firebase.google.com/docs/android/setup#available-libraries

    def mock_neat_version = "0.3.8"
    implementation "net.andreinc.mockneat:mockneat:$mock_neat_version"

    // Timber dependencies - log library
    def timber_version = "4.7.1"
    implementation "com.jakewharton.timber:timber:$timber_version"

    //glide
    def glide_version = "4.11.0"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    // Reactive Programming dependencies
    def rx_kotlin_version = '2.4.0'
    implementation "io.reactivex.rxjava2:rxkotlin:$rx_kotlin_version"

    def rx_android_version = '2.1.1'
    implementation "io.reactivex.rxjava2:rxandroid:$rx_android_version"

    def room_version = "2.2.6"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // RxJava support for Room
    def room_rxjava_version = "1.0.0-alpha5"
    implementation "android.arch.persistence.room:rxjava2:$room_rxjava_version"
}

